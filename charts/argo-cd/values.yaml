argo-cd:
  ## Argo CD configuration
  ## Ref: https://github.com/argoproj/argo-cd
  ## Globally shared configuration
  global:
    domain: cd.dev.4chain.space
  ## Server
  server:
    # Argo CD server ingress configuration
    ingress:
      # -- Enable an ingress resource for the Argo CD server
      enabled: true
      # -- Specific implementation for ingress controller. One of `generic`, `aws` or `gke`
      ## Additional configuration might be required in related configuration sections
      controller: generic
      # -- Additional ingress annotations
      ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough
      annotations:
        cert-manager.io/cluster-issuer: lets-encrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # -- Defines which ingress controller will implement the resource
      ingressClassName: "traefik"
      # -- The path to Argo CD server
      path: /
      # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
      pathType: Prefix
      # -- Enable TLS configuration for the hostname defined at `server.ingress.hostname`
      ## TLS certificate will be retrieved from a TLS secret `argocd-server-tls`
      ## You can create this secret via `certificate` or `certificateSecret` option
      tls: true
  ## START Helm Lookup Enabling
  ## Hacky way to make helm lookup working in argo-cd
  ## See https://github.com/argoproj/argo-cd/issues/5202#issuecomment-2081661930
  repoServer:
    clusterRoleRules:
      enabled: true
    volumes:
      - name: helm-replace
        configMap:
          name: config-map-helm-replace
          defaultMode: 0777
    volumeMounts:
      - name: helm-replace
        mountPath: /usr/local/sbin/helm
        subPath: helm
    env:
      - name: HELM_BIN
        value: /usr/local/bin/helm
  ## Adding this here to keep all configs related to this hack in single place
  extraObjects:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-map-helm-replace
      data:
        helm: |-
          #!/bin/bash
      
          HELM_BIN=${HELM_BIN:-helm}
      
          new_args=()
          template_found=false
      
          for arg in "$@"; do
            if [[ "$arg" == "template" ]]; then
              template_found=true
              new_args+=("$arg")
            elif $template_found && [[ "${#new_args[@]}" -eq 1 ]]; then
              new_args+=("--dry-run=server" "$arg")
              template_found=false
            else
              new_args+=("$arg")
            fi
          done
      
          $HELM_BIN "${new_args[@]}"

  ## END Helm Lookup Enabling

  configs:
    repositories:
      private-repo:
        url: git@github.com:4chain-ag/k8s-config.git
        sshPrivateKey: |
